(const int "=" 1)
(const ptr "=" 1)
(const zeroChar "=" 48)

(struct Point (Point_x int)(Point_y int))

(function avgPoint (avgPoint_points avgPoint_count)
    (asm '<test>')
    (return (
        (let (var (buff int)(i int))
            (asm '<testptr>')
            (buff "="0)
            (i "=" 0)
            (while ((L i) "<" (L avgPoint_count))
                (buff "=" ((L buff) "+" (L (Point_x "+" ((L avgPoint_points) "+" (Point "*" (L i)))))))
                (i "=" ((L i) "+" 1))
            )
            (asm '<let1>')
            (L buff)
        ) 
        "+" 
        (let (var (buff int)(i int))
            (buff "=" 0)
            (i "=" 0)
            (while ((L i) "<" (L avgPoint_count))
                (buff "=" ((L buff) "+" (L (Point_y "+" ((L avgPoint_points) "+" (Point "*" (L i)))))))
                (i "=" ((L i) "+" 1))
            )
            (asm '<let2>')
            (L buff)
        ))
    )
)
(function out (char)
    (asm GETFP 2 ADD LOAD OUT)
)
(function recursiveNumberOut(n)
    (if ((L n) "==" 0)
        (return 0)
    else
        (block (var (buff int))
            (buff "=" ((L n) "%" 10))
            (n "=" ((L n) "/" 10))
            (call recursiveNumberOut (L n))
            (call out ((L buff) "+" zeroChar))
        )
    )
)

(function numberOut (n)
    (if ((L n) "==" 0)
        (call out zeroChar)
    else
        (call recursiveNumberOut (L n))
    )
)

(const SIZE "=" 10)
(var points (Point "*" SIZE) "=" 1 2 3 4 5)

(function main()
    (call numberOut (call avgPoint points SIZE))
)
