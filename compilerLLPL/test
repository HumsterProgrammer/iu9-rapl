(const int "=" 1)
(const ptr "=" 1)
(const zeroChar "=" 48)
(const lparen "=" 40)
(const rparen "=" 41)
(const space "=" 32)
(const nextLine "=" 10)

(struct Point
	(Point_x int)
	(Point_y int)
)
(struct Line
	(Line_Start Point)
	(Line_End Point)
)
(struct ColorPoint
	("-" Point)
	(Color int)
)


(function out (char)
    (asm GETFP 2 ADD LOAD OUT)
)
(function recursiveNumberOut(n)
    (if ((L n) "==" 0)
        (return 0)
    else
        (block (var (buff int))
            (buff "=" ((L n) "%" 10))
            (n "=" ((L n) "/" 10))
            (call recursiveNumberOut (L n))
            (call out ((L buff) "+" zeroChar))
        )
    )
)

(function numberOut (n)
    (if ((L n) "==" 0)
        (call out zeroChar)
    else
        (call recursiveNumberOut (L n))
    )
)

(function pointOut (point_ptr)
    (call out lparen)
    (call numberOut (L ((L point_ptr) "+" Point_x)))
    (call out space)
    (call numberOut (L ((L point_ptr) "+" Point_y)))
    (call out rparen)
)
(function avgPoint (avgPoint_points avgPoint_count)
    (asm '<test>')
    (return (
        (let (var (buff int)(i int))
            (asm '<testptr>')
            (buff "="0)
            (i "=" 0)
            (while ((L i) "<" (L avgPoint_count))
                (buff "=" ((L buff) "+" (L (Point_x "+" ((L avgPoint_points) "+" (Point "*" (L i)))))))
                (i "=" ((L i) "+" 1))
            )
            (asm '<let1>')
            (L buff)
        ) 
        "+" 
        (let (var (buff int)(i int))
            (buff "=" (i "=" 0))
            (while ((L i) "<" (L avgPoint_count))
                (buff "=" ((L buff) "+" (L (Point_y "+" ((L avgPoint_points) "+" (Point "*" (L i)))))))
                (i "=" ((L i) "+" 1))
            )
            (asm '<let2>')
            (L buff)
        ))
    )
)

(var testPoint Point "=" 11 22)

(const SIZE "=" 10)
(var points (Point "*" SIZE) "=" 1 2 3 4 5)

(function main ()
    (var (i int))
    (i "=" 0)
    (while ((L i) "<" SIZE)
        (call pointOut (points "+" (Point "*" (L i))))
        (i "=" ((L i) "+" 1))
    )
    (call out nextLine)
    (call numberOut (call avgPoint points SIZE))
	(return 0)
)
